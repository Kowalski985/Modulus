[
{"ModuleCode": "CS1010", "ModuleTitle": "Programming Methodology", "ModuleDescription": "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing. It is also the first part of a three-part series on introductory programming and problem solving by computing, which also includes CS1020 and CS2010. Topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. This module is appropriate for SoC students.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS1010E", "ModuleTitle": "Programming Methodology", "ModuleDescription": "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing and the first part of a three-part series on programming and problem solving by computing, which includes CS1020 and CS2010. Topics include problem solving by computing, writing pseudo-codes, problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. This module is appropriate for FoE students.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS1010R", "ModuleTitle": "Programming Methodology", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS1010S", "ModuleTitle": "Programming Methodology", "ModuleDescription": "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing and is equivalent to CS1010 and CS1010E Programming Methodology. Topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. This module is appropriate for FoS students.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS1010X", "ModuleTitle": "Programming Methodology", "ModuleDescription": "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing and is equivalent to CS1010, CS1010S and CS1010E Programming Methodology. The module will be taught using the Python programming language and topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS1020", "ModuleTitle": "Data Structures and Algorithms I", "ModuleDescription": "This module is the second part of a three-part series on introductory programming and problem solving by computing. It continues the introduction that begins in CS1010, and emphasises objectoriented programming with application to simple data structures. Topics include object-oriented problem modeling with objects, classes and methods, object-oriented problem formulation and solving, data structure implementation strageties, abstraction and encapsulation of data structures, object-oriented programming constructs, APIs and class libraries, exception handling, lists, linked lists, stacks, queues, hash tables and their algorithmic design, sorting and searching methods, recursive algorithms, and Big-O notation. This module is appropriate for SoC and FoS students.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS1020E", "ModuleTitle": "Data Structures and Algorithms I", "ModuleDescription": "This module is the second part of a three-part series on introductory programming and problem solving by computing. It continues the introduction that begins in CS1010, and emphasises objectoriented programming with application to simple data structures. Topics include object-oriented problem modeling with objects, classes and methods, object-oriented problem formulation and solving, data structure implementation strageties, abstraction and encapsulation of data structures, object-oriented programming constructs, APIs and class libraries, exception handling, lists, linked lists, stacks, queues, hash tables and their algorithmic design, sorting and searching methods, recursive algorithms, and Big-O notation. This module is appropriate for FoE students.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS1231", "ModuleTitle": "Discrete Structures", "ModuleDescription": "This module introduces mathematical tools required in the study of computer science. Topics include: (1) Logic and proof techniques: propositions, conditionals, quantifications. (2) Relations and Functions: Equivalence relations and partitions. Partially ordered sets. Well-Ordering Principle. Function equality. Boolean/identity/inverse functions. Bijection. (3) Mathematical formulation of data models (linear model, trees, graphs). (4) Counting and Combinatoric: Pigeonhole Principle. Inclusion-Exclusion Principle. Number of relations on a set, number of injections from one finite set to another, Diagonalisation proof: An infinite countable set has an uncountable power set; Algorithmic proof: An infinite set has a countably infinite subset. Subsets of countable sets are countable.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS1231R", "ModuleTitle": "Discrete Structures", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS2010", "ModuleTitle": "Data Structures and Algorithms II", "ModuleDescription": "This module is the third part of a three-part series on introductory programming and problem solving by computing. It continues the introduction in CS1010 and CS1020, and emphasises object-oriented programming with application to complex data structures. Topics covered include trees, binary search trees, order property, prefix/infix/postfix expressions, heaps, priority queues, graphs and their algorithmic design, recursive algorithms, problem formulation and problem solving with applications of complex data structures, data structure design principles and implementation strategies, and algorithm analysis. Advanced data structures such as B-trees and AVL trees are also covered.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS2020", "ModuleTitle": "Data Structures and Algorithms Accelerated", "ModuleDescription": "This module is an accelerated version that combines CS1020 and CS2010. It continues the introduction in CS1010, and emphasises object-oriented programming with application to data structures. Topics covered include object-oriented problem modeling with concepts of objects, classes and methods, object-oriented problem formulation and problem solving, data structure design principles and implementation strageties, abstraction and encapsulation of data structures, object-oriented programming constructs, use of APIs and class libraries, exception handling, lists, linked lists, stacks, queues, hash tables, trees, graphs, and their algorithmic design, various forms of sorting and searching methods, recursive algorithms, and algorithm analysis.", "Department": "Computer Science", "ModuleCredit": "6"},
{"ModuleCode": "CS2100", "ModuleTitle": "Computer Organisation", "ModuleDescription": "The objective of this module is to familiarise students with the fundamentals of computing devices. Through this module students will understand the basics of data representation, and how the various parts of a computer work, separately and with each other. This allows students to understand the issues in computing devices, and how these issues affect the implementation of solutions. Topics covered include data representation systems, combinational and sequential circuit design techniques, assembly language, processor execution cycles, pipelining, memory hierarchy and input/output systems.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS2100R", "ModuleTitle": "Computer Organisation", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS2101", "ModuleTitle": "Effective Communication for Computing Professionals", "ModuleDescription": "This module aims to equip students with the skills needed to communicate technical information to technical and nontechnical audiences, and to create comprehensible software documentation. A student-centric approach will be adopted to encourage independent and collaborative learning while engaging students in team-based projects. Students will learn interpersonal and intercultural communication skills as well as hone their oral and written communication skills. Assessment modes include a variety of oral and written communication tasks such as reports, software guides, oral presentations, software demonstrations and project blogs.", "Department": "Ctr For English Language Communication", "ModuleCredit": "4"},
{"ModuleCode": "CS2102", "ModuleTitle": "Database Systems", "ModuleDescription": "The aim of this module is to introduce the fundamental concepts and techniques necessary for the understanding and practice of design and implementation of database applications and of the management of data with relational database management systems. The module covers practical and theoretical aspects of design with entity-relationship model, theory of functional dependencies and normalisation by decomposition in second, third and Boyce-Codd normal forms. The module covers practical and theoretical aspects of programming with SQL data definition and manipulation sublanguages, relational tuple calculus, relational domain calculus and relational algebra.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS2102R", "ModuleTitle": "Database Systems", "ModuleDescription": "The aim of this module is to introduce the fundamental concepts and techniques necessary for the understanding and practice of design and implementation of database applications and of the management of data with relational database management systems. The module covers practical and theoretical aspects of design with entity-relationship model, theory of functional dependencies and normalisation by decomposition in second, third and Boyce-Codd normal forms. The module covers practical and theoretical aspects of programming with SQL data definition and manipulation sublanguages, relational tuple calculus, relational domain calculus and relational algebra.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS2103", "ModuleTitle": "Software Engineering", "ModuleDescription": "This module introduces the necessary conceptual and analytical tools for systematic and rigorous development of software systems. It covers four main areas of software development, namely object-oriented system analysis, object-oriented system modelling and design, implementation, and testing, with emphasis on system modelling and design and implementation of software modules that work cooperatively to fulfill the requirements of the system. Tools and techniques for software development, such as Unified Modelling Language (UML), program specification, and testing methods, will be taught. Major software engineering issues such as modularisation criteria, program correctness, and software quality will also be covered.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS2103R", "ModuleTitle": "Software Engineering", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS2103T", "ModuleTitle": "Software Engineering", "ModuleDescription": "This module introduces the necessary conceptual and analytical tools for systematic and rigorous development of software systems. It covers four main areas of software development, namely object-oriented system analysis, object-oriented system modelling and design, implementation, and testing, with emphasis on system modelling and design and implementation of software modules that work cooperatively to fulfill the requirements of the system. Tools and techniques for software development, such as Unified Modelling Language (UML), program specification, and testing methods, will be taught. Major software engineering issues such as modularisation criteria, program correctness, and software quality will also be covered.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS2104R", "ModuleTitle": "Programming Language Concepts", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS2105", "ModuleTitle": "Introduction to Computer Networks", "ModuleDescription": "This module aims to provide a broad introduction to computer networks and network application programming. It covers the main concepts, the fundamental principles, and the high-level workings of important protocols in each of the Internet protocol layer. Topics include the Web and Web applications, DNS services, socket programming, reliable protocols, transport and network layer protocols, secure communication, LAN, and data communication. Practical assignments and handson exercises expose students to network application programming and various networking tools and utilities.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS2105R", "ModuleTitle": "Introduction to Computer Networks", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS2106", "ModuleTitle": "Introduction to Operating Systems", "ModuleDescription": "This module introduces the basic concepts in operating systems and links it with contemporary operating systems (eg. Unix/Linux and Windows). It focuses on OS structuring and architecture, processes, memory management, concurrency and file systems. Topics include kernel architecture, system calls, interrupts, models of processes, process abstraction and services, scheduling, review of physical memory and memory management hardware, kernel memory management, virtual memory and paging, caches, working set, deadlock, mutual exclusion, synchronisation mechanisms, data and metadata in file systems, directories and structure, file system abstraction and operations, OS protection mechanisms, and user authentication.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS2107", "ModuleTitle": "Introduction to Information Security", "ModuleDescription": "This module serves as an introductory module on information security. It illustrates the fundamentals of how systems fail due to malicious activities and how they can be protected. The module also places emphasis on the practices of secure programming and implementation. Topics covered include classical/historical ciphers, introduction to modern ciphers and cryptosystems, ethical, legal and organisational aspects, classic examples of direct attacks on computer systems such as input validation vulnerability, examples of other forms of attack such as social engineering/phishing attacks, and the practice of secure programming.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3201", "ModuleTitle": "Software Engineering Project I", "ModuleDescription": "This module is the first part of a two-part series on the practice of software engineering in Software Development Life Cycle (SDLC). These two modules together provide the students with hands-on experience in working in project groups through a complete SDLC to develop a well-designed, welltested, large-scaled software system. This first part focuses on applying best software engineering practices on the analysis and design of software system. The students will practice analysis of user\u2019s needs, formulation of computing requirements to meet the user\u2019s needs, modeling and design of the computer systems according to the requirements, and evaluation of the design.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3201R", "ModuleTitle": "Software Engineering Project I", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS3202", "ModuleTitle": "Software Engineering Project II", "ModuleDescription": "This module is the second part of a two-part series on the practice of software engineering in Software Development Life Cycle (SDLC). These two modules together provide the students with hands-on experience in working in project groups through a complete SDLC to develop a well-tested, large-scaled software system. This second part focuses on applying best software engineering practices on the implementation and testing of the software system. The students will practice efficient implementation of software components, system integration, software version control, and rigorous testing.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3211", "ModuleTitle": "Parallel and Concurrent Programming", "ModuleDescription": "A concurrent system consists of a set of processes that executes simultaneously and that may collaborate by communicating and synchronising with one another. Examples of concurrent systems are parallel programs that describe sets of collaborating processes. This module introduces the design, development and debugging of parallel programs. It will build on the concurrency concepts gained from the Operating Systems module. It covers concepts and modelling tools for specifying and reasoning (about the properties of) concurrent systems and parallel programs. It also covers principles of performance analysis, asynchronous and asynchronous parallel programming, and engineering concurrent systems and parallel programs.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3217", "ModuleTitle": "Software Engineering on Modern Application Platforms", "ModuleDescription": "This module introduces students to the practice of software engineering on modern application platforms such as mobile devices, the Web and cloud systems. Students will work in small project teams to develop well-tested, production-quality software. This module focuses on building core software engineering skills and competencies in programming modern application platforms. It also trains students to work well in project teams. Students will be assessed on both their individual programming competencies and their software enginnering skills in final team project.", "Department": "Computer Science", "ModuleCredit": "5"},
{"ModuleCode": "CS3218", "ModuleTitle": "Multimodal Processing in Mobile Platforms", "ModuleDescription": "Modern mobile platforms such as smart phones and tablets are equipped with an increasing number of sensing modalities. In addition to traditional components such as keyboards and touch screens, they are also equipped with cameras, microphones, inertial sensor, and GPS receivers. With these modalities all packed into a single platform, it is important to empower application developers with basic knowledge and practical skills in dealing with these modalities. This module introduces the students to basic theories, concept and practical skills needed in input, processing and output of multimodal data on mobile platforms.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3219", "ModuleTitle": "Software Engineering Principles and Patterns", "ModuleDescription": "This module provides an in-depth, hands-on experience in key aspects of software engineering that accompany the development of software. Based on proven principles and best practices, this module focuses on software architectural design from the perspective of the software process. It covers techniques for requirement elicitation and specification that provide sound base for architectural design. The module covers design decision exploration as well as patterns that explicate principles and best practices in replicable form.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3223", "ModuleTitle": "Database Systems Implementation", "ModuleDescription": "This module provides an in-depth study of the concepts and implementation issues related to database management systems. It first covers the physical implementation of relational data model, which includes storage management, access methods, query processing, and optimisation. Then it covers issues and techniques dealing with multi-user application environments, namely, transactions, concurrency control and recovery. The third part covers object-database systems that are useful extension of relational databases to deal with complex data types. The last part covers database technologies required for modern decision support systems, including data warehousing, data mining and knowledge discovery and on-line analytical processing.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3225", "ModuleTitle": "Combinatorial Methods in Bioinformatics", "ModuleDescription": "After the complete sequencing of a number of genomes, we are in the stage to understand the mystery of our body, that is, we need to understand the information encoded in the genome and its relationship with RNA and protein. This aim of this module is to cover algorithms related to this stage. In the module, we will cover the algorithms related to genome annotation, motif identification, proteomics, population genetics, microarray, etc.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3226", "ModuleTitle": "Web Programming and Applications", "ModuleDescription": "This module introduces students to software development on the Web platforms. Students will be exposed to important computer science concepts, including networking, databases, computer security, user interface design, programming languages, and software engineering. These concepts will be tied together through hands-on practice in building a Web-based application using the current Web development technology. At the end of the module, students are expected to be able to design and develop a Web application, to appreciate the underlying technology needed to build a Web application, and to develop a fundamental understanding of related computer science concepts.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3230", "ModuleTitle": "Design and Analysis of Algorithms", "ModuleDescription": "This module introduces different techniques of designing and analysing algorithms. Students will learn about the framework for algorithm analysis, for example, lower bound arguments, average case analysis, and the theory of NP-completeness. In addition, students are exposed to various algorithm design paradigms. The module serves two purposes: to improve the students' ability to design algorithms in different areas, and to prepare students for the study of more advanced algorithms. The module covers lower and upper bounds, recurrences, basic algorithm paradigms (such as prune-and-search, dynamic programming, branch-and-bound, graph traversal, and randomised approaches), amortized analysis, NP-completeness, and some selected advanced topics.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3230R", "ModuleTitle": "Design and Analysis of Algorithms", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS3233", "ModuleTitle": "Competitive Programming", "ModuleDescription": "This module aims to prepare students in competitive problem solving. It covers techniques for attacking and solving challenging computational problems. Fundamental algorithmic solving techniques covered include divide and conquer, greedy, dynamic programming, backtracking and branch and bound. Domain specific techniques like number theory, computational geometry, string processing and graph theoretic will also be covered. Advanced AI search techniques like iterative deepening, A* and heuristic search will be included. The module also covers algorithmic and programming language toolkits used in problem solving supported by the solution of representative or well-known problems in the various algorithmic paradigms.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3233R", "ModuleTitle": "Competitive Programming", "ModuleDescription": "This module aims to prepare students in competitive problem solving. It covers techniques for attacking and solving challenging computational problems. Fundamental algorithmic solving techniques covered include divide and conquer, greedy, dynamic programming, backtracking and branch and bound. Domain specific techniques like number theory, computational geometry, string processing and graph theoretic will also be covered. Advanced AI search techniques like iterative deepening, A* and heuristic search will be included. The module also covers algorithmic and programming language toolkits used in problem solving supported by the solution of representative or well-known problems in the various algorithmic paradigms.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS3234", "ModuleTitle": "Logic and Formal Systems", "ModuleDescription": "This module focuses on the deductive and algorithmic aspects of both classical and non-classical logics. It introduces logic as a means for specifying, verifying and reasoning about computer programs. It emphasises, in contrast to other similar logic courses, on how logic can be used to represent computational problems, how these representations can be proven correct and how they can be executed on a computer. Topics covered include classical logic theories, logic programming, modal logic, and an introduction to non-standard logics. Treatments of predicate calculus and temporal logic are fully covered with emphasis on their specification, verification, deductive and algorithmic aspects.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3235", "ModuleTitle": "Computer Security", "ModuleDescription": "The objective of this module is to provide a broad understanding of computer security with some indepth discussions on selected topics in system and network security. This module covers the following topics: intrusion detection, DNS security, electronic mail security, authentication, access control, buffer overflow, memory and stack protection, selected topics in application security, for instance, web security, and well-known attacks.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3236", "ModuleTitle": "Introduction to Information Theory", "ModuleDescription": "This module introduces the basics of modern information theory. It covers how information can be quantified, and what this quantification tells us about how well we can compress and transmit information without error. It discusses basic error correcting techniques, and information-theoretic cryptography. Topics covered include: mathematical techniques, entropy measures, fundamental limits to data compression and noisy-channel coding, examples of error-correcting codes, examples of information theoretic cryptography (commitments, secure computation, key distribution, randomness extraction).", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3240", "ModuleTitle": "Interaction Design", "ModuleDescription": "This course is intended for students in computing and related disciplines whose work focuses on human-computer interaction issues in the design of computer systems. The course stresses the importance of user-centred design and usability in the development of computer applications and systems. Students will be taken through the analysis, design, development, and evaluation of human-computer interaction methods for computer systems. They will acquire hands-on design skills through laboratory exercises and assignments. The course also covers HCI design principles and emphasizes the importance of contextual, organisational, and social factors in system design.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3240R", "ModuleTitle": "Interaction Design", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS3241", "ModuleTitle": "Computer Graphics", "ModuleDescription": "This module teaches some graphics hardware devices, reviews the mathematics related to the understanding, and discusses the fundamental areas of computer graphics. After completing the course, students are expected to understand the basic computer graphics terminology and concepts, and to be able to design and implement simple 2D and 3D interactive computer graphics related programs. As an enrichment part of the course, students are introduced the state-of-the-art development in computer graphics by viewing interesting video clips and experimenting with demo program made available in the course web.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3241R", "ModuleTitle": "Computer Graphics", "ModuleDescription": "This module teaches some graphics hardware devices, reviews the mathematics related to the understanding, and discusses the fundamental areas of computer graphics. After completing the course, students are expected to understand the basic computer graphics terminology and concepts, and to be able to design and implement simple 2D and 3D interactive computer graphics related programs. As an enrichment part of the course, students are introduced the state-of-the-art development in computer graphics by viewing interesting video clips and experimenting with demo program made available in the course web.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS3242", "ModuleTitle": "3D Modeling and Animation", "ModuleDescription": "This module aims to provide fundamental concepts in 3D modeling and animation. It also serves as a bridge to advanced media modules. After taking this module, students should be able to use these concepts to easily build or work with digital models, manipulate the models by means of computer deformation and animation, and use lighting and rendering techniques to create appealing scenes. Topics include coordinate spaces, transforms, 3D model representations, hierarchical structures, deformation, procedural modelling, particle systems, character animation, shading networks, lighting, and scripting concepts.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3243", "ModuleTitle": "Introduction to Artificial Intelligence", "ModuleDescription": "The module introduces the basic concepts in search and knowledge representation as well as to a number of sub-areas of artificial intelligence. It focuses on covering the essential concepts in AI. The module covers Turing test, blind search, iterative deepening, production systems, heuristic search, A* algorithm, minimax and alpha-beta procedures, predicate and first-order logic, resolution refutation, non-monotonic reasoning, assumption-based truth maintenance systems, inheritance hierarchies, the frame problem, certainly factors, Bayes' rule, frames and semantic nets, planning, learning, natural language, vision, and expert systems and LISP.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3243R", "ModuleTitle": "Introduction to Artificial Intelligence", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS3245", "ModuleTitle": "Information Retrieval", "ModuleDescription": "This module discusses the basic concepts and methods of information retrieval including capturing, representing, storing, organizing, and retrieving unstructured or loosely structured information. The most well-known aspect of information retrieval is document retrieval: the process of indexing and retrieving text documents. However, the field of information retrieval includes almost any type of unstructured or semi-structured data, including newswire stories, transcribed speech, email, blogs, images, or video. Therefore, information retrieval is a critical aspect of Web search engines. This module also serves as the foundation for subsequent modules on the understanding, processing and retrieval of particular web media.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3247", "ModuleTitle": "Game Development", "ModuleDescription": "The objective of this module is to introduce techniques for electronic game design and programming. This module covers a range of important topics including 3D maths, game physics, game AI, sound, as well as user interface for computer games. Furthermore, it will give an overview of computer game design to the students. Through laboratory programming exercises, the students will have hands-on programming experience with popular game engines and will develop basic games using those engines.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3249", "ModuleTitle": "User Interface Development", "ModuleDescription": "This module aims at providing students with technical skills and hands-on experience of user interface development. It focuses on the design and implementation of user interfaces in general, including graphical user interface. It covers essential topics including user interface models, psychology of humans and computers, user interface style, layout guidelines, GUI programming with widget toolkits, interaction models, event handling, multithreading, interacting with multimedia hardware, usability testing. Selected advanced topics such as geometric transformation, and 3D user interfaces, multiple-user interaction and real-time interaction are also covered.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3281", "ModuleTitle": "Thematic Systems Project I", "ModuleDescription": "This module is the first part of a two-part series on the development of large-scaled computer systems to solve real-world problems under specific themes such as healthcare, security and surveillance, tourism, etc. Students with complementary technical expertise will form project teams to work on real-world projects under the supervision of CS professors and industrial partners. This first part focuses on the analysis of the real-world problems, formulation of the computing requirements of the desired solution that meets the user\u2019s needs, design of the computer systems according to the requirements, and evaluation of the design.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3282", "ModuleTitle": "Thematic Systems Project II", "ModuleDescription": "This module is the second part of a two-part series on the development of large-scaled computer systems to solve real-world problems under specific themes such as healthcare, security and surveillance, tourism, etc. Students with complementary technical expertise will form project teams to work on real-world projects under the supervision of CS professors and industrial partners. This second part focuses on the development of algorithms required for the systems, implementation and testing of the algorithms and the systems, and evaluation of the systems according to the users\u2019 requirements.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3283", "ModuleTitle": "Media Technology Project I", "ModuleDescription": "This module is the first part of a two-part series on the development of media technology systems such as interactive systems, games, retrieval systems, multimedia computing applications, etc. Students will form project teams to work on media technology projects. This first part focuses on the analysis of the user\u2019s needs, formulation of the computing requirements of the desired solution that meets the user\u2019s needs, design of the systems according to the requirements, implementation of first-cut prototype for evaluation purpose, and evaluation of the design.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS3284", "ModuleTitle": "Media Technology Project II", "ModuleDescription": "This module is the second part of a two-part series on the development of media technology systems such as interactive systems, games, retrieval systems, multimedia computing applications, etc. Students will form project teams to work on media technology projects. This second part focuses on the development of algorithms required for the systems, implementation and testing of the algorithms and the systems, and evaluation of the systems according to the users\u2019 requirements.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4211", "ModuleTitle": "Formal Methods for Software Engineering", "ModuleDescription": "Before software can be designed, its requirements must be well understood. This in turns requires a thorough understanding of the application domain. In developing domain descriptions and requirement specifications, we need to acquire and analyse domain knowledge and system requirements, transform them into domain and requirement models, and validate these models together with domain and requirement stakeholders. Once the domain and requirement descriptions are clear, a software design can be constructed to capture software architecture and components. This course will cover the principles and techniques of these three major phases of software engineering: Domain Engineering, Requirements Engineering and Software Design.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4215", "ModuleTitle": "Programming Language Implementation", "ModuleDescription": "This module provides the students with theoretical knowledge and practical skill in the implementation of programming languages. It discusses implementation aspects of fundamental programming paradigms (imperative, functional and object-oriented), and of basic programming language concepts such as binding, scope, parameter-passing mechanisms and types. It introduces the language processing techniques of interpretation and compilation and virtual machines. The lectures are accompanied by lab sessions which will focus on language processing tools, and take the student through a sequence of programming language implementations. This modules also covers automatic memory management, dynamic linking and just-in-time compilation, as features of modern execution systems.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4218", "ModuleTitle": "Software Testing", "ModuleDescription": "This module covers the concepts and practice of software testing including unit testing, integration testing, and regression testing. Various testing coverage criteria will be discussed. Debugging methods for finding the root-cause of errors in failing test cases will also be investigated. The use of testing and analysis for performance prediction, performance clustering and performance debugging will be studied. Students will acquire crucial skills on testing and debugging through hands-on assignments.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4220", "ModuleTitle": "Knowledge Discovery Methods in Bioinformatics", "ModuleDescription": "The advent of high throughput technologies (e.g, DNA chips, microarray, etc), biologists are being overloaded with lots of information (e.g., gene expression data). To be able to make sense out of these data, there is a need to have a systematic way to analyse them. This course is introduced to provide students with knowledge of techniques that can be used to analyse biological data to enable them to discover new knowledge. At the end of the course, students will be able to identify the relevant techniques for different biological data to uncover new information. Topics include: Clustering analysis, classification, association rule mining; support vector machines; Hidden Markov Models.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4221", "ModuleTitle": "Database Applications Design and Tuning", "ModuleDescription": "This module addresses the design and performance tuning of database applications. The syllabus focusses on relational database applications implemented with relational database management systems. Topics covered include normalisation theory (functional, multi-valued and join dependency, normal forms, decomposition and synthesis methods), entityrelationship approach and SQL tuning (performance evaluation, execution plan verification, indexing, de-normalization, code level and transactions tuning). The syllabus optionally includes selected topics in the technologies, design and performance tuning of non-relational database applications (for instance, network and hierarchical models and nested relational model for an historical perspective, as well as XML and NoSQL systems for a modern perspective).", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4222", "ModuleTitle": "Wireless Networking", "ModuleDescription": "This module aims to provide solid foundation for students in the area of wireless networks and introduces students to the emerging area of cyber-physical-system/Internet-of-Things. The module will cover wireless networking across all layers of the networking stack including physical, link, MAC, routing and application layers. Different network technologies with different characteristic will also be covered, including cellular networks, Wi-Fi, Bluetooth and ZigBee. Some key concepts that cut across all layers and network types are mobility management, energy efficiency, and integration of sensing and communications. The module emphasizes on exposing students to practical network system issues through building software prototypes.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4225", "ModuleTitle": "Massive Data Processing Techniques in Data Science", "ModuleDescription": "Data science incorporates varying elements and builds on techniques and theories from many fields, including statistics, data engineering, data mining, visualization, data warehousing, and high performance computing with the goal of extracting meaning from data and creating data products. Data science seeks to use all available and relevant data to effectively tell a story that can be easily understood by non-practitioners. In this module, students will learn various massive data processing techniques that are used in data science with emphasis on the algorithmic and mathematical properties of these techniques.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4231", "ModuleTitle": "Parallel and Distributed Algorithms", "ModuleDescription": "This course will examine some fundamental issues in parallel programming and distributed computing, and the relationships between the two. Parallel programming: mutual exclusion, semaphores, consistency, wait-free synchronization. Distributed computing: time, global state, snapshots, message ordering. Relationships: consensus, fault-tolerance, transactions, self-stabilization.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4238", "ModuleTitle": "Computer Security Practice", "ModuleDescription": "This is a practice security module with emphasis on hands-on experiences of computer security. The objective of this module is to connect computer security knowledge to practical skills, including common attacks and protection mechanisms, system administration, and development of secured software. Topics covered include network security, operating system security, and application security, such as DNS attacks, memory-error exploits, and web application attacks. Students will learn through lab-based exercises and assignments.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4242", "ModuleTitle": "Social Media Computing", "ModuleDescription": "The emergence of WWW, smart mobile devices and social networks has revolutionised the way we communicate, create, disseminate, and consume information. This has ushered in a new era of communications that involves complex information exchanges and user relationships. This module aims to provide students with a good understanding of the social network phenomena and computational skills for analysing the complex social relation networks between users, the contents they shared, and the ways contents and events are perceived and propagated through the social networks. The analysis will provide better understanding of the concerns and interests of users, and uncover live and emerging events that will affect the community.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4244", "ModuleTitle": "Knowledge-Based Systems", "ModuleDescription": "This is a module that contains both the theory and practice of building knowledge-based systems. The aim of this module is to prepare students so that they can design and build knowledge-based systems to solve real-world problems. The module starts with motivations, background and history of knowledge-based system development. The main content has five parts: rule-based programming language, uncertainty management, knowledge-based systems design, development and life cycle, efficiency in rule-based language and knowledge-based systems design examples.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4247", "ModuleTitle": "Graphics Rendering Techniques", "ModuleDescription": "This module provides a general treatment of real-time and offline rendering techniques in 3D computer graphics. Specific topics include the raster graphics pipeline, viewing and transformation, real-time mapping techniques, real-time shadow algorithms, local reflection models, global illumination, distributed ray tracing, photon mapping, radiosity, volume rendering, image-based rendering and modelling, and strategies for anti-aliasing and photo-realism.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS4248R", "ModuleTitle": "Natural Language Processing", "ModuleDescription": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.", "Department": "Computer Science", "ModuleCredit": "1"},
{"ModuleCode": "CS4347", "ModuleTitle": "Sound and Music Computing", "ModuleDescription": "This module introduces the fundamental technologies employed in sound and music computing which are grouped into three major areas: Sound, Music, and Interaction. It begins with an introduction to sound production, propagation and perception, followed by digital sound recording, editing, post-processing and compression. Its core components consists of the analytic and synthetic approaches of sound and music. The analytic approach pertains to analysis and understanding, whereas the synthetic approach pertains to generation and processing. Interaction aspects include multimodal mobile music interface and sound interaction design. Finally, music information retrieval will be introduced as an application of analytic techniques.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5201", "ModuleTitle": "Foundation in Theoretical CS", "ModuleDescription": "The purpose of this module is to test the students on basic concepts in theoretical computer science. In particular, the students will be tested on the following areas. A.\tDesign and Analysis of Algorithms B.\tTheory of Computation C.\tProgramming Languages D.\tLogic and Formal Systems The respective undergraduate modules: CS3230, CS3231, CS3212, CS3234", "Department": "Computer Science", "ModuleCredit": "0"},
{"ModuleCode": "CS5202", "ModuleTitle": "Foundation in Computer Systems", "ModuleDescription": "The purpose of this module is to test the students on basic concepts in computer systems. In particular, the students will be tested on the following topics. A. Advanced Operating Systems B. Computer Networks II C. Database Management Systems D. Computer Architecture The respective undergraduate modules: CS3221, CS3103, CS3223, CS3220", "Department": "Computer Science", "ModuleCredit": "0"},
{"ModuleCode": "CS5215", "ModuleTitle": "Constraint Processing", "ModuleDescription": "Constraint programming is an alternative approach to computing in which the programming process is limited to a generation of requirements (constraints) and to solving of them by general methods and domain dependent methods. This module discusses the basic aspects of constraint programming, focusing on how to model and solve the constraints. Students will learn problem modelling by means of constraints and the main techniques used to solve such systems of constraints. The module focuses on the fundamental notions of constraint satisfaction problems, local consistency, constraint propagation, complete and incomplete constraint solvers, and various search methods.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5218", "ModuleTitle": "Principles of Program Analysis", "ModuleDescription": "Program analysis are static (compile-time) techniques for computing approximate and yet reliable information about the dynamic behaviour of programs. This module lays the foundation for study of program analysis. It covers the essential mathematics upon which program analyses are built, and provides an overview of different approaches to program analysis. Topics include: Partially ordered sets, induction and co-induction, data flow analysis, constraint based analysis, abstract interpretation, and type and effect systems. Students with interest in programming-language design and compiler design will find this module beneficial.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5224", "ModuleTitle": "Cloud Computing", "ModuleDescription": "This module aims to provide an overview of the design, management and application of cloud computing. The topics include managing virtualization, cloud computing environments, cloud design patterns and use cases, data centre architectures and technologies, cloud services fulfillment and assurance, orchestration and automation of cloud resources, cloud capacity management, cloud economics, case studies.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5232", "ModuleTitle": "Formal Specification and Design Techniques", "ModuleDescription": "The primary role of the formal specification is to provide a precise and unambiguous description of a computer system. A formal specification allows the system designer to verify important properties and detect design error before system development begins. The objective of this course is to study various formal specification and design techniques for modelling (1) object-oriented systems, (2) real-time distributed systems, and (3) concurrent reactive systems. The course will focus on the state-based notations Z/Object-Z, event-based notation CSP/Timed-CSP. Graphical modelling notations, such as StateChart and UML (Unified Modelling Language) will also be addressed.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5233", "ModuleTitle": "Simulation and Modelling Techniques", "ModuleDescription": "This module aims to provide students with a working knowledge of applying simulation techniques to model, simulate and study complex systems. It covers techniques in simulation model design, model execution, and model analysis. Students will have hands-on experience using a simulation package. The module will also introduce concepts of parallel and distributed simulation, and high level architecture.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5246", "ModuleTitle": "Text Processing on the Web", "ModuleDescription": "Most information on the web is in the form of encoded free-text formats. Current trends are towards high-level and semantic encoding of text information, and towards the integration of wired and wireless web environments. There is a need to classify and abstract information for display on wide variety of devices with wide ranging processing power and display capabilities. This module introduces the concepts and techniques for the analysis, representation, retrieval, classification and summarisation of unstructured textual information. Upon completion, the students should have the competence to design and implement text processing and mining systems and search engines on the web.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5250", "ModuleTitle": "Advanced Operating Systems", "ModuleDescription": "The module covers a broad range of issues in the design and implementation of modern advanced operating systems. The topics covered in this module includes OS design strategies (including microkernels, mobile, embedded and real-time operating systems and the component\u2019s interfaces), priority and resource allocation strategies; scheduling algorithms (including for multi-core, multi-processors); naming, protection and security; UI and windowing systems; file system implementations (including network and distributed file systems); failure and recovery; and virtualization and the Internet-ready OS. They extend and provide in-depth coverage of material in earlier prerequisite OS modules.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5321", "ModuleTitle": "Network Security", "ModuleDescription": "The objective of this module is to introduce students to the various issues that arise in securing the networks, and study the state-of-the-art techniques for addressing these challenges. A number of most damaging attacks on computer systems involve the exploitation of network infrastructure. This module provides an in-depth study of network attack techniques and methods to defend against them. Topics include basic concepts in network security; firewalls and virtual private networks; network intrusion detection; denial of service (DoS); traffic analysis; secure routing protocols; protocol scrubbing; and advanced topics such as wireless network security.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5330", "ModuleTitle": "Randomized Algorithms", "ModuleDescription": "The module will cover basic concepts in the design and analysis of randomized algorithms. It will cover both basic techniques, such as Chernoff bounds, random walks, and the probabilistic method, and a variety of practical algorithmic applications, such as load balancing, hash functions, and graph/network algorithms. The focus will be on utilizing randomization to develop algorithms that are more efficient and/or simpler than their deterministic counterparts.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5331", "ModuleTitle": "Web Security", "ModuleDescription": "This module aims to prepare graduate students for understanding the security of the latest web platform and its interplay with operating systems and the cloud infrastructure. The topics covered include the design of web browsers and web applications, vulnerabilities in web applications and web browsers, design of web scanners, authentication in web-based platforms, security policies and enforcement mechanisms. This module also covers security topics on the interface between the web platform and the backend systems, such as the underlying database systems and cloud infrastructure.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5339", "ModuleTitle": "Theory and Algorithms for Machine Learning", "ModuleDescription": "The module aims to provide a broad theoretical understanding of machine learning and how the theory guides the development of algorithms and applications. Topics covered include the approximation capabilities of common function classes used for machine learning, such as decision trees, neural networks, and support vector machines, the sample complexity of learning different function classes and methods of reducing the estimation error such as regularization and model selection, and computational methods used for learning such as convex optimization, greedy methods, and stochastic gradient descent.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS5344", "ModuleTitle": "Big-Data Analytics Technology", "ModuleDescription": "This module analysis of data which can not fit in main memory and application of such analysis to web applications. The topics covered include: map-reduce as a tool for creating parallel algorithms that operate on very large amount of data, similarity search, data-streaming processing, search engine techonology, clustering of very large, high-dimensional datasets.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS6101", "ModuleTitle": "Exploration of Computer Science Research", "ModuleDescription": "This module introduces CS graduate students to various research areas in Computer Science. Study groups are organised for major research areas. Each study group provides a forum for students to read, present and discuss research papers, and acquire the basic research skills for literature review and critical comparison of existing work. Students will also gain a first experience in technical presentation and writing. This module will be graded as \u201cCompleted Satisfactory\u201d or \u201cCompleted Unsatisfactory\u201d (CS/CU).", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS6208", "ModuleTitle": "Advanced Topics in Artificial Intelligence", "ModuleDescription": "This module covers advanced topics in artificial intelligence that are of current research or application interests. A wide range of topics may be covered including soft computing (fuzzy logic, genetic algorithms, etc.), data mining, machine learning, image and video processing, artificial life, robotics, etc. The exact topics to be taught will depend on the lecturers teaching the module.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS6210", "ModuleTitle": "The Art of Computer Science Research", "ModuleDescription": "This module aims to provide the meta-skills for research in computer science. How does one discover great research problems? What are the good strategies for solving research problems? How does one write papers or give presentations with great impact? Students will seek answers to these questions by critically examining and assessing successful and less successful examples of research.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS6220", "ModuleTitle": "Advanced Topics in Data Mining", "ModuleDescription": "With the rapid advances of computer and internet technologies, a large amount of data accumulates. Discovering knowledge from the data will give us a competitive advantage. The process of knowledge discovery involves pre-processing the data, mining or discovering patterns from the data, and post-processing the discovered patterns. In this course, we will review and examine the present techniques and the theories behind them and explore new and improved techniques for real world knowledge discovery applications. The course is designed to encourage active discussion, creative thinking, and hands-on project development.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS6234", "ModuleTitle": "Advanced Algorithms", "ModuleDescription": "This module is aimed at graduate students who are doing or intend to do advanced research in algorithms design and analysis in all areas of computer science. The module covers advanced material on combinatorial and graph algorithms with emphasis on efficient algorithms, and explores their use in a variety of application areas. Topics covered include, but are not restricted to, linear programming, graph matching and network flows, approximation algorithms, randomized algorithms, online algorithms, local search algorithms, algorithms for large datasets. The module will be a seminar-based module that will expose students to current research in these areas.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS6240", "ModuleTitle": "Multimedia Analysis", "ModuleDescription": "This module aims to provide a comprehensive and rigorous treatment of the main approaches in multimedia (document, image, video, graphics) analysis. Three main themes are covered: (1) representation and modelling of multimedia entities using various modelling approaches, (2) matching of a model with an input entity, and (3) derivation of a model from sample entities. It focuses on the non-vector-space approach, which complements the vector-space approach to multimedia analysis.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CS6283", "ModuleTitle": "Topics in Computer Science IV: Computational Social Choice", "ModuleDescription": "Recent years have seen a dramatic rise in the use of algorithms for solving problems involving strategic decision makers. Deployed algorithms now assist in a variety of economic interactions, from kidney exchange and airport security, to allocating computational resources and dividing rent. We will explore foundational topics in computational social choice. Our exploration will begin from seemingly simple group decision making problems: selling items at an auction, dividing rent among roommates, allocating computational resources and more. These problems all require an interdisciplinary approach, combining ideas from economics, game theory and algorithmic analysis.", "Department": "Computer Science", "ModuleCredit": "4"},
{"ModuleCode": "CSA6102", "ModuleTitle": "Cultural Studies In Asia", "ModuleDescription": "The module is a multidisciplinary academic study of the bible and Christianity, open to all interested in these themes. Major topics will include (i) interpretative approaches to biblical texts, (ii) history of the collection of the bible, (iii) biblical authority, (iv) Christianity\u2019s basic moral code and beliefs, and (v) popular issues (Gnostic Christianity). The course assumes no prior knowledge of Christianity and will count toward the Religious Studies minor.", "Department": "Dean's Office (Arts & Social Sc.)", "ModuleCredit": "4"},
{"ModuleCode": "CSA6880", "ModuleTitle": "Topics in Cultural Studies in Asia", "ModuleDescription": "This module is to be taught by an eminent visiting scholar in Cultural Studies in Asia, appointed as a visiting teaching fellow for one semester. The content of module will therefore vary according to the specialized interests of the visiting teaching fellow.", "Department": "Dean's Office (Arts & Social Sc.)", "ModuleCredit": "4"}
]